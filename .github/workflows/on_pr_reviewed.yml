name: Update Jira Custom Field - isPRApproved

on:
  pull_request_review:
    types:
      - submitted
jobs:
  update-jira:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Retrieve Issue Key from Branch Name
        id: split-branch-name
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BRANCH_NAME=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" \
            | jq -r '.head.ref')
          echo "branch_name=$BRANCH_NAME" >> "$GITHUB_ENV"
          
      - name: Check Substring
        run: |
          if echo "${{ env.branch_name }}" | grep -q "dev-branch"; then
            SECOND_PART=$(echo "${{env.branch_name}}" | cut -d'-' -f4-)
            echo "issue_key=$SECOND_PART" >> "$GITHUB_ENV"
          else
            SECOND_PART=$(echo "${{env.branch_name}}" | cut -d'-' -f2-)
            echo "issue_key=$SECOND_PART" >> "$GITHUB_ENV"
          fi
          
      - name: Check all PRs in the ticket
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_BASIC_API_TOKEN }}
        run: |
          ISSUE_KEY="${{ env.issue_key }}"
          API_ENDPOINT="/rest/api/2/issue/$ISSUE_KEY"
          API_RES=$(curl --location --request GET $JIRA_BASE_URL$API_ENDPOINT \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $JIRA_API_TOKEN")
          PR1=$(echo "$API_RES" | jq -r '.fields.customfield_10034')
          REPO1=$(echo "$API_RES" | jq -r '.fields.customfield_10035')
          PR2=$(echo "$API_RES" | jq -r '.fields.customfield_10040')
          REPO2=$(echo "$API_RES" | jq -r '.fields.customfield_10041')
          PRS_ARRAY=("$PR1" "$PR2")
          for value in "${PRS_ARRAY[@]}"; do
            if [[ "$value" != null ]]; then
              IS_ALL_PRS_APPROVED="true"
              echo "Processing value: $value, $PR1"
              if [[ "$value" == "$PR1"]]; then
                echo "PR, Repo: $value,$REPO1"
                PR_State_Response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/$REPO1/pulls/$value/reviews")
              else
                echo "PR, Repo: $value,$REPO2"
                PR_State_Response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/$REPO2/pulls/$value/reviews")
              fi
              echo "PR Api Res: $PR_State_Response"
              if [[ ${#PR_State_Response[@]} -eq 0 ]]; then
                echo "array is empty"
              else
                echo "array is not empty"
              fi
              PR_State = $PR_State.state
              echo "Before PR State: $PR_State"
              PR_State=$(echo $PR_State | sed 's/"//g')
              echo "After PR State: $PR_State"
              if [[ "$PR_State" == "APPROVED" ]]; then
                IS_ALL_PRS_APPROVED="true"
              else
                IS_ALL_PRS_APPROVED="false"
              fi
              echo "All PRs state: $IS_ALL_PRS_APPROVED"
            fi
          done
          echo "is_all_prs_approved=$IS_ALL_PRS_APPROVED" >> "$GITHUB_ENV"
        
      - name: Update Jira Custom Field - isPRApproved
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_BASIC_API_TOKEN }}
        run: |
          ISSUE_KEY="${{ env.issue_key }}"  # Replace with the Jira issue key
          API_ENDPOINT="/rest/api/2/issue/$ISSUE_KEY"  # Replace with the desired Jira API endpoint

          REQUEST_BODY='{
            "fields": {
              "customfield_10038": "${{ github.event.review.state }}"
            }
          }'

          curl --location --request PUT $JIRA_BASE_URL$API_ENDPOINT \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $JIRA_API_TOKEN" \
            -d "$REQUEST_BODY"
        if: ${{ github.event.review.state == 'APPROVED' && env.is_all_prs_approved == 'true' }}
            
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
            
      - name: Transition issue
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ env.issue_key }}
          transition: "PR Approved"
        if: ${{ github.event.review.state == 'APPROVED' && env.is_all_prs_approved == 'true' }}
